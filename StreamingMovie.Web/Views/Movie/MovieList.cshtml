@using StreamingMovie.Application.Coomon.Pagination
@using StreamingMovie.Application.DTOs
@model PagedResult<UnifiedMovieDTO>
@{
    ViewData["Title"] = "Categories";
}

<!-- Breadcrumb Begin -->
<div class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__links">
                    <a asp-action="Index" asp-controller="Home"><i class="fa fa-home"></i> Home</a>
                    <a asp-action="Categories" asp-controller="Category">Categories</a>
                    <span>@ViewBag.SectionTitle</span>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Product Section Begin -->
<section class="product-page spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="product__page__content">
                    <div class="product__page__title">
                        <div class="row d-flex align-items-center">
                            <div class="col-lg-8 col-md-8 col-sm-6">
                                <div class="section-title">
                                    <h4>@ViewBag.SectionTitle</h4>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6">
                                <div class="product__page__filter">
                                    <button class="btn btn-outline-light" onclick="toggleComponent('filterPanel')">
                                        <i class="bi bi-funnel"></i> Filter
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    @await Component.InvokeAsync("FilterPanel")
                    <div id="movie-list-container">
                        @await Html.PartialAsync("_MovieListPartial", Model)
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 col-sm-8">
                <div class="product__sidebar">
                    @await Component.InvokeAsync("SidebarMovie")
                    @await Component.InvokeAsync("SidebarComment")
                </div>
            </div>
        </div>
    </div>
</section>

@* ajax *@
@section Scripts {
    <script>
        let isLoading = false;
        $(document).on('submit', '.ajax-form', function (e) {
            e.preventDefault();

            if (isLoading) return;

            const $form = $(this);
            const url = $form.attr('action') || window.location.pathname;
            const formData = $form.serialize();

            isLoading = true;

             $.ajax({
                url: url + '?' + formData,
                method: 'GET',
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                success: function (response) {
                    $('#movie-list-container').html(response);
                    history.pushState(null, '', url + '?' + formData);
                },
                complete: function () {
                    isLoading = false;
                },
                error: function () {
                    alert("Failed to load movies.");
                }
            });
        });

        window.addEventListener('popstate', function () {
            if ($('.search-model:visible').length > 0) return;
            location.reload();
        });
    </script>
}
